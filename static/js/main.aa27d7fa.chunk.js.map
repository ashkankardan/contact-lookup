{"version":3,"sources":["components/card/Card.jsx","components/card-list/Card-list.jsx","components/search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","contact","name","src","id","email","CardList","contacts","map","Search","placeholder","handleChange","type","onChange","App","e","setState","search","target","value","state","fetch","then","res","json","catch","err","console","error","this","filteredContacts","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGaA,G,YAAO,SAACC,GAAD,OAClB,qBAAKC,UAAU,8BAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBACEA,UAAU,cACVC,IAAKF,EAAMG,QAAQC,KACnBC,IAAG,+BAA0BL,EAAMG,QAAQG,GAAxC,4BAEL,6BAAKN,EAAMG,QAAQC,OACnB,6BAAKJ,EAAMG,QAAQI,eCTZC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,gBAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCJdK,G,MAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACpC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCDG,E,kDAtCb,aAAe,IAAD,8BACZ,gBAQFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SAPjC,EAAKC,MAAQ,CACXb,SAAU,GACVU,OAAQ,IALE,E,gEAaO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACf,GACL,EAAKS,SAAS,CAAET,gBAEjBkB,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,Q,+BAGxB,IAAD,EACsBG,KAAKT,MAA1Bb,EADD,EACCA,SAAUU,EADX,EACWA,OACZa,EAAmBvB,EAASwB,QAAO,SAAC9B,GAAD,OACvCA,EAAQC,KAAK8B,cAAcC,SAAShB,EAAOe,kBAG7C,OACE,sBAAKjC,UAAU,gBAAf,UACE,oBAAIA,UAAU,UAAd,4BACA,cAAC,EAAD,CAAQW,YAAY,iBAAiBC,aAAckB,KAAKlB,eACxD,cAAC,EAAD,CAAUJ,SAAUuB,W,GAjCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.aa27d7fa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\n\nexport const Card = (props) => (\n  <div className=\"col-lg-4 col-md-6 col-sm-12\">\n    <div className=\"card-container\">\n      <img\n        className=\"contact-img\"\n        alt={props.contact.name}\n        src={`https://robohash.org/${props.contact.id}?set=set1&size=180x180`}\n      />\n      <h2>{props.contact.name}</h2>\n      <h4>{props.contact.email}</h4>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Card } from \"../card/Card\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list row\">\n      {props.contacts.map((contact) => (\n        <Card key={contact.id} contact={contact} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search.css\";\n\nexport const Search = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/Card-list\";\nimport { Search } from \"./components/search/Search\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contacts: [],\n      search: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ search: e.target.value });\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((contacts) => {\n        this.setState({ contacts });\n      })\n      .catch((err) => console.error(err));\n  }\n\n  render() {\n    const { contacts, search } = this.state;\n    const filteredContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(search.toLowerCase())\n    );\n\n    return (\n      <div className=\"App container\">\n        <h1 className=\"heading\">Contact Lookup</h1>\n        <Search placeholder=\"Search Contact\" handleChange={this.handleChange} />\n        <CardList contacts={filteredContacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}